// Code generated by ent, DO NOT EDIT.

package ent

import (
	"entgo.io/ent/schema/field"
	"github.com/naelcodes/ab-backend/ent/customer"
	"github.com/naelcodes/ab-backend/ent/imputation"
	"github.com/naelcodes/ab-backend/ent/invoice"
	"github.com/naelcodes/ab-backend/ent/payment"
	"github.com/naelcodes/ab-backend/ent/schema"
	"github.com/naelcodes/ab-backend/ent/travelitem"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	customerFields := schema.Customer{}.Fields()
	_ = customerFields
	// customerDescAccountNumber is the schema descriptor for account_number field.
	customerDescAccountNumber := customerFields[1].Descriptor()
	// customer.AccountNumberValidator is a validator for the "account_number" field. It is called by the builders before save.
	customer.AccountNumberValidator = customerDescAccountNumber.Validators[0].(func(string) error)
	// customerDescIDCurrency is the schema descriptor for id_currency field.
	customerDescIDCurrency := customerFields[2].Descriptor()
	// customer.DefaultIDCurrency holds the default value on creation for the id_currency field.
	customer.DefaultIDCurrency = customerDescIDCurrency.Default.(int)
	// customerDescIDCountry is the schema descriptor for id_country field.
	customerDescIDCountry := customerFields[3].Descriptor()
	// customer.DefaultIDCountry holds the default value on creation for the id_country field.
	customer.DefaultIDCountry = customerDescIDCountry.Default.(int)
	// customerDescAlias is the schema descriptor for alias field.
	customerDescAlias := customerFields[4].Descriptor()
	// customer.AliasValidator is a validator for the "alias" field. It is called by the builders before save.
	customer.AliasValidator = customerDescAlias.Validators[0].(func(string) error)
	// customerDescAbKey is the schema descriptor for ab_key field.
	customerDescAbKey := customerFields[5].Descriptor()
	// customer.AbKeyValidator is a validator for the "ab_key" field. It is called by the builders before save.
	customer.AbKeyValidator = customerDescAbKey.Validators[0].(func(string) error)
	// customerDescTmcClientNumber is the schema descriptor for tmc_client_number field.
	customerDescTmcClientNumber := customerFields[7].Descriptor()
	// customer.TmcClientNumberValidator is a validator for the "tmc_client_number" field. It is called by the builders before save.
	customer.TmcClientNumberValidator = customerDescTmcClientNumber.Validators[0].(func(string) error)
	imputationFields := schema.Imputation{}.Fields()
	_ = imputationFields
	// imputationDescAmountApply is the schema descriptor for amount_apply field.
	imputationDescAmountApply := imputationFields[0].Descriptor()
	// imputation.DefaultAmountApply holds the default value on creation for the amount_apply field.
	imputation.DefaultAmountApply = imputationDescAmountApply.Default.(float64)
	imputation.ValueScanner.AmountApply = imputationDescAmountApply.ValueScanner.(field.TypeValueScanner[float64])
	// imputation.AmountApplyValidator is a validator for the "amount_apply" field. It is called by the builders before save.
	imputation.AmountApplyValidator = imputationDescAmountApply.Validators[0].(func(float64) error)
	// imputationDescInvoiceAmount is the schema descriptor for invoice_amount field.
	imputationDescInvoiceAmount := imputationFields[1].Descriptor()
	// imputation.DefaultInvoiceAmount holds the default value on creation for the invoice_amount field.
	imputation.DefaultInvoiceAmount = imputationDescInvoiceAmount.Default.(float64)
	imputation.ValueScanner.InvoiceAmount = imputationDescInvoiceAmount.ValueScanner.(field.TypeValueScanner[float64])
	// imputation.InvoiceAmountValidator is a validator for the "invoice_amount" field. It is called by the builders before save.
	imputation.InvoiceAmountValidator = imputationDescInvoiceAmount.Validators[0].(func(float64) error)
	// imputationDescPaymentAmount is the schema descriptor for payment_amount field.
	imputationDescPaymentAmount := imputationFields[2].Descriptor()
	// imputation.DefaultPaymentAmount holds the default value on creation for the payment_amount field.
	imputation.DefaultPaymentAmount = imputationDescPaymentAmount.Default.(float64)
	imputation.ValueScanner.PaymentAmount = imputationDescPaymentAmount.ValueScanner.(field.TypeValueScanner[float64])
	// imputation.PaymentAmountValidator is a validator for the "payment_amount" field. It is called by the builders before save.
	imputation.PaymentAmountValidator = imputationDescPaymentAmount.Validators[0].(func(float64) error)
	invoiceFields := schema.Invoice{}.Fields()
	_ = invoiceFields
	// invoiceDescCreationDate is the schema descriptor for creation_date field.
	invoiceDescCreationDate := invoiceFields[0].Descriptor()
	// invoice.CreationDateValidator is a validator for the "creation_date" field. It is called by the builders before save.
	invoice.CreationDateValidator = invoiceDescCreationDate.Validators[0].(func(string) error)
	// invoiceDescInvoiceNumber is the schema descriptor for invoice_number field.
	invoiceDescInvoiceNumber := invoiceFields[1].Descriptor()
	// invoice.InvoiceNumberValidator is a validator for the "invoice_number" field. It is called by the builders before save.
	invoice.InvoiceNumberValidator = invoiceDescInvoiceNumber.Validators[0].(func(string) error)
	// invoiceDescAmount is the schema descriptor for amount field.
	invoiceDescAmount := invoiceFields[4].Descriptor()
	// invoice.DefaultAmount holds the default value on creation for the amount field.
	invoice.DefaultAmount = invoiceDescAmount.Default.(float64)
	invoice.ValueScanner.Amount = invoiceDescAmount.ValueScanner.(field.TypeValueScanner[float64])
	// invoice.AmountValidator is a validator for the "amount" field. It is called by the builders before save.
	invoice.AmountValidator = invoiceDescAmount.Validators[0].(func(float64) error)
	// invoiceDescNetAmount is the schema descriptor for net_amount field.
	invoiceDescNetAmount := invoiceFields[5].Descriptor()
	// invoice.DefaultNetAmount holds the default value on creation for the net_amount field.
	invoice.DefaultNetAmount = invoiceDescNetAmount.Default.(float64)
	invoice.ValueScanner.NetAmount = invoiceDescNetAmount.ValueScanner.(field.TypeValueScanner[float64])
	// invoice.NetAmountValidator is a validator for the "net_amount" field. It is called by the builders before save.
	invoice.NetAmountValidator = invoiceDescNetAmount.Validators[0].(func(float64) error)
	// invoiceDescBaseAmount is the schema descriptor for base_amount field.
	invoiceDescBaseAmount := invoiceFields[6].Descriptor()
	// invoice.DefaultBaseAmount holds the default value on creation for the base_amount field.
	invoice.DefaultBaseAmount = invoiceDescBaseAmount.Default.(float64)
	invoice.ValueScanner.BaseAmount = invoiceDescBaseAmount.ValueScanner.(field.TypeValueScanner[float64])
	// invoice.BaseAmountValidator is a validator for the "base_amount" field. It is called by the builders before save.
	invoice.BaseAmountValidator = invoiceDescBaseAmount.Validators[0].(func(float64) error)
	// invoiceDescBalance is the schema descriptor for balance field.
	invoiceDescBalance := invoiceFields[7].Descriptor()
	// invoice.DefaultBalance holds the default value on creation for the balance field.
	invoice.DefaultBalance = invoiceDescBalance.Default.(float64)
	invoice.ValueScanner.Balance = invoiceDescBalance.ValueScanner.(field.TypeValueScanner[float64])
	// invoice.BalanceValidator is a validator for the "balance" field. It is called by the builders before save.
	invoice.BalanceValidator = invoiceDescBalance.Validators[0].(func(float64) error)
	// invoiceDescCreditApply is the schema descriptor for credit_apply field.
	invoiceDescCreditApply := invoiceFields[8].Descriptor()
	// invoice.DefaultCreditApply holds the default value on creation for the credit_apply field.
	invoice.DefaultCreditApply = invoiceDescCreditApply.Default.(float64)
	invoice.ValueScanner.CreditApply = invoiceDescCreditApply.ValueScanner.(field.TypeValueScanner[float64])
	// invoice.CreditApplyValidator is a validator for the "credit_apply" field. It is called by the builders before save.
	invoice.CreditApplyValidator = invoiceDescCreditApply.Validators[0].(func(float64) error)
	paymentFields := schema.Payment{}.Fields()
	_ = paymentFields
	// paymentDescNumber is the schema descriptor for number field.
	paymentDescNumber := paymentFields[0].Descriptor()
	// payment.NumberValidator is a validator for the "number" field. It is called by the builders before save.
	payment.NumberValidator = paymentDescNumber.Validators[0].(func(string) error)
	// paymentDescDate is the schema descriptor for date field.
	paymentDescDate := paymentFields[1].Descriptor()
	// payment.DateValidator is a validator for the "date" field. It is called by the builders before save.
	payment.DateValidator = paymentDescDate.Validators[0].(func(string) error)
	// paymentDescBalance is the schema descriptor for balance field.
	paymentDescBalance := paymentFields[2].Descriptor()
	// payment.DefaultBalance holds the default value on creation for the balance field.
	payment.DefaultBalance = paymentDescBalance.Default.(float64)
	payment.ValueScanner.Balance = paymentDescBalance.ValueScanner.(field.TypeValueScanner[float64])
	// payment.BalanceValidator is a validator for the "balance" field. It is called by the builders before save.
	payment.BalanceValidator = paymentDescBalance.Validators[0].(func(float64) error)
	// paymentDescAmount is the schema descriptor for amount field.
	paymentDescAmount := paymentFields[3].Descriptor()
	// payment.DefaultAmount holds the default value on creation for the amount field.
	payment.DefaultAmount = paymentDescAmount.Default.(float64)
	payment.ValueScanner.Amount = paymentDescAmount.ValueScanner.(field.TypeValueScanner[float64])
	// payment.AmountValidator is a validator for the "amount" field. It is called by the builders before save.
	payment.AmountValidator = paymentDescAmount.Validators[0].(func(float64) error)
	// paymentDescBaseAmount is the schema descriptor for base_amount field.
	paymentDescBaseAmount := paymentFields[4].Descriptor()
	// payment.DefaultBaseAmount holds the default value on creation for the base_amount field.
	payment.DefaultBaseAmount = paymentDescBaseAmount.Default.(float64)
	payment.ValueScanner.BaseAmount = paymentDescBaseAmount.ValueScanner.(field.TypeValueScanner[float64])
	// payment.BaseAmountValidator is a validator for the "base_amount" field. It is called by the builders before save.
	payment.BaseAmountValidator = paymentDescBaseAmount.Validators[0].(func(float64) error)
	// paymentDescUsedAmount is the schema descriptor for used_amount field.
	paymentDescUsedAmount := paymentFields[5].Descriptor()
	// payment.DefaultUsedAmount holds the default value on creation for the used_amount field.
	payment.DefaultUsedAmount = paymentDescUsedAmount.Default.(float64)
	payment.ValueScanner.UsedAmount = paymentDescUsedAmount.ValueScanner.(field.TypeValueScanner[float64])
	// payment.UsedAmountValidator is a validator for the "used_amount" field. It is called by the builders before save.
	payment.UsedAmountValidator = paymentDescUsedAmount.Validators[0].(func(float64) error)
	// paymentDescIDChartOfAccounts is the schema descriptor for id_chart_of_accounts field.
	paymentDescIDChartOfAccounts := paymentFields[9].Descriptor()
	// payment.DefaultIDChartOfAccounts holds the default value on creation for the id_chart_of_accounts field.
	payment.DefaultIDChartOfAccounts = paymentDescIDChartOfAccounts.Default.(int)
	// paymentDescIDCurrency is the schema descriptor for id_currency field.
	paymentDescIDCurrency := paymentFields[10].Descriptor()
	// payment.DefaultIDCurrency holds the default value on creation for the id_currency field.
	payment.DefaultIDCurrency = paymentDescIDCurrency.Default.(int)
	travelitemFields := schema.TravelItem{}.Fields()
	_ = travelitemFields
	// travelitemDescTotalPrice is the schema descriptor for total_price field.
	travelitemDescTotalPrice := travelitemFields[0].Descriptor()
	travelitem.ValueScanner.TotalPrice = travelitemDescTotalPrice.ValueScanner.(field.TypeValueScanner[float64])
}
